---
driver:
  name: docker

provisioner:
  name: salt_solo
  bootstrap_url: 'https://raw.githubusercontent.com/olhado/kitchen-salt/master/assets/install.sh'
  is_file_root: true
  # Use this section (and comment out the `threatstack.sls` definition in the `pillars` section)
  # to grab pillar data from the `pillar.example` file
  # pillars_from_files:
  #   threatstack.sls: pillar.example
  pillars:
    top.sls:
      base:
        '*':
          - threatstack
    # Use this section (and comment out the `pillars_from_files` section)
    # to grab pillar data from environment variables
    threatstack.sls:
      deploy_key: <%= ENV['TS_DEPLOY_KEY'] != nil ? ENV['TS_DEPLOY_KEY'] : 'ts_deploy_key' %>
      <% if ENV['TS_PACKAGE_VERSION'] %>
      ts_agent_version: <%= ENV['TS_PACKAGE_VERSION'] %>
      <% end %>
      <% if ENV['TS_CONFIGURE_AGENT'] %>
      ts_configure_agent: <%= ENV['TS_CONFIGURE_AGENT'] %>
      <% end %>
      <% if ENV['TS_SETUP_ARGS'] %>
      ts_agent_extra_args: <%= ENV['TS_SETUP_ARGS'] %>
      <% end %>
      <% if ENV['TS_CONFIG_ARGS'] %>
      ts_agent_config_args: <%= ENV['TS_CONFIG_ARGS'] %>
      <% end %>
  state_top:
    base:
      '*':
        - threatstack

platforms:
  - name: amazonlinux-1
    image: amazonlinux:1
    driver_config:
      run_command: /sbin/init
      privileged: true
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - yum install -y ruby24
        - alternatives --set ruby /usr/bin/ruby2.4
        - yum install -y audit initscripts
        - sed -i 's/local_events = yes/local_events = no/g' /etc/audit/auditd.conf
        - chkconfig auditd on
  - name: amazonlinux-2
    image: amazonlinux:2
    driver_config:
      run_command: /sbin/init
      privileged: true
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - amazon-linux-extras install ruby2.6
        - yum install -y ruby-devel gcc make
        - gem install io-console --install-dir=/tmp/verifier/gems
        - chown -R kitchen:kitchen /tmp/verifier
        - yum install -y audit initscripts
        - sed -i 's/local_events = yes/local_events = no/g' /etc/audit/auditd.conf
        - systemctl enable auditd.service
  - name: centos-7
    image: centos:7
    driver_config:
      run_command: /sbin/init
      privileged: true
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - yum install -y ruby ruby-devel git
        - yum install -y centos-release-scl-rh
        - yum install -y rh-ruby26
        - mkdir -p /opt/chef/embedded/bin
        - ln -s "/opt/rh/rh-ruby26/root/usr/bin/gem" /opt/chef/embedded/bin/
        - ln -s "/opt/rh/rh-ruby26/root/usr/bin/ruby" /opt/chef/embedded/bin/
        - |
          printf "LD_LIBRARY_PATH=/opt/rh/rh-ruby26/root/usr/local/lib64:/opt/rh/rh-ruby26/root/usr/lib64\n"\
          >> /etc/environment
        - yum install -y audit initscripts
        - sed -i 's/local_events = yes/local_events = no/g' /etc/audit/auditd.conf
        - systemctl enable auditd.service
  - name: centos-8
    image: centos:8
    driver_config:
      run_command: /sbin/init
      privileged: true
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - yum install -y audit initscripts
        - sed -i 's/local_events = yes/local_events = no/g' /etc/audit/auditd.conf
        - systemctl enable auditd.service
  - name: debian-8
    image: debian:8
    driver_config:
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - |
          apt-get install -y checkinstall build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev wget && \
          wget https://cache.ruby-lang.org/pub/ruby/2.6/ruby-2.6.6.tar.gz && \
          tar xfz ruby-2.6.6.tar.gz && \
          echo "364b143def360bac1b74eb56ed60b1a0dca6439b00157ae11ff77d5cd2e92291 ruby-2.6.6.tar.gz" | sha256sum -c && \
          cd ruby-2.6.6 && ./configure && make && make install && rm ../ruby-2.6.6.tar.gz
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: debian-9
    image: debian:9
    driver_config:
      run_command: /bin/systemd
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: debian-10
    image: debian:10
    driver_config:
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: ubuntu-16.04
    image: ubuntu:16.04
    driver_config:
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: ubuntu-18.04
    image: ubuntu:18.04
    driver_config:
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: ubuntu-20.04
    image: ubuntu:20.04
    driver_config:
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service

suites:
  - name: default
  - name: custom
    provisioner:
      pillars:
        threatstack.sls:
          ts_agent_config_args: "--set log.maxSize 22"
